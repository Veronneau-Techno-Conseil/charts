
registry: 
  # Default values for docker-registry.
  # This is a YAML-formatted file.
  # Declare variables to be passed into your templates.
  replicaCount: 1

  updateStrategy: {}
    # type: RollingUpdate
    # rollingUpdate:
    #   maxSurge: 1
    #   maxUnavailable: 0

  image:
    repository: registry
    tag: 2.7.1
    pullPolicy: IfNotPresent
  # imagePullSecrets:
      # - name: docker
  
  securityContext:
    enabled: true
    runAsUser: 1000
    fsGroup: 1000

  ingress:
    enabled: false
    path: /
    # Used to create an Ingress record.
    hosts:
      - registry.mydomain.com
    #annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    #labels: {}
    tls:
      # Secrets must be manually created in the namespace.
      - secretName: registry-ingress-cert
        hosts:
          - registry.mydomain.com
  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #  cpu: 100m
    #  memory: 128Mi
    # requests:
    #  cpu: 100m
    #  memory: 128Mi
  persistence:
    accessMode: 'ReadWriteOnce'
    enabled: true
    deleteEnabled: true
    size: 30Gi
    existingClaim: registrypvc
    # storageClass: '-'

  # set the type of filesystem to use: filesystem, s3
  storage: filesystem

  # Set this to name of secret for tls certs
  # tlsSecretName: registry.docker.example.com
  secrets:
    haSharedSecret: ""
    htpasswd: ""

issuer:
  path: pki_int_vtc/sign/Certs
  url: https://vault.mydomain.com
  token: comeToken
  caBundle: ca-bundle
  nameOverride: reg-issuer
  fullnameOverride: reg-issuer
  enabled: false

regcert:
  issuerRef: ca-issuer
  nameOverride: registry-certificate
  targetSecretName: registry-ingress-cert
  dnsNames:
    - registry.mydomain.com
  keystores: {}

ui-certificate:
  issuerRef: ca-issuer
  nameOverride: ui-certificate
  targetSecretName: registryui-ingress-cert
  dnsNames:
    - registryui.mydomain.com
  keystores: {}

ingress:
    path: /
    # Used to create an Ingress record.
    host: registry.mydomain.com
    #annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    #labels: {}
    tls:
      - secretName: registry-ingress-cert
        hosts:
          - registry.mydomain.com

registryui:
  # Default values for docker-registry-ui.
  # This is a YAML-formatted file.
  # Declare variables to be passed into your templates.


  ui:
    ingress:
      enabled: true
      annotations: {}
        # kubernetes.io/ingress.class: nginx
        # kubernetes.io/tls-acme: "true"
      hosts:
        - host: registryui.mydomain.com

      tls:
        - secretName: registryui-ingress-cert
          hosts:
            - registryui.mydomain.com


  registry:
    external: true
    # URL of the registry (requiered. Note: this wont work as localhost is inside the container. Only used if the registry is external)
    url: registry.mydomain.com

  imagePullSecrets: []
  nameOverride: ""
